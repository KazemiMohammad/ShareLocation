{"version":3,"sources":["redux/action.ts","components/Modal/modal.style.tsx","components/Modal/index.tsx","redux/actionType.ts","utils/customMapMarketIcon/index.tsx","components/ShareLocation/index.tsx","components/LocationDetail/index.tsx","components/Map/index.tsx","App.tsx","components/Modal/useModal.tsx","reportWebVitals.ts","redux/reducer.ts","redux/store.ts","index.tsx"],"names":["PlaceType","Wrapper","styled","div","Backdrop","StyledModal","Header","HeaderText","CloseButton","button","Content","Modal","isShown","hide","modalContent","headerText","modal","Fragment","onClick","ReactDOM","createPortal","document","body","ActionType","customMapMarkerIcon","L","icon","iconUrl","iconSize","iconAnchor","mapState","state","selectedLocation","LocationMarker","props","useMapEvents","click","e","setLatLng","latlng","Marker","position","latLng","ShareLocation","dispatch","useDispatch","useSelector","useState","name","setName","lat","lng","type","Home","locationType","setLocationType","image","logo","setLogo","className","value","onChange","target","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Object","keys","map","key","files","hideModal","location","id","payload","AddLocation","LocationDetail","closePopup","showShareLocationModal","locations","useEffect","length","getCenter","firstLocationPoint","flyTo","item","Popup","Map","style","height","width","Location","toggle","App","setIsShown","useModal","shareLocation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","InitialState","LoactionReducer","action","Math","floor","random","filter","Store","createStore","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.a86ae9fb.chunk.js","sourcesContent":["import { ActionType } from \"./actionType\";\n\nexport interface LocationType {\n    id: number,\n    lat: number,\n    lng: number,\n    name: string,\n    type: PlaceType,\n    image: any | null\n}\n\nexport enum PlaceType {\n    Business = 'Business',\n    Home = 'Home',\n    School = 'School'\n}\n\nexport const AddLocation = (payload: LocationType) => ({\n    type: ActionType.ADD_LOCATION,\n    payload: payload\n})\nexport const EditLocation = (payload: LocationType) => ({\n    type: ActionType.EDIT_LOCATION,\n    payload: payload\n})\n\nexport const SetSelectedLocation = (payload: LocationType) => ({\n    type: ActionType.SET_SELECTED_LOCATION,\n    payload: payload\n})","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1100;\n  width: 420px;\n  outline: 0;\n\n  @media (max-width: 420px) {\n    width: 90vw;\n  }\n`;\nexport const Backdrop = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background: rgba(256, 256, 256, 0.9);\n  z-index: 1001;\n`;\nexport const StyledModal = styled.div`\n  z-index: 100;\n  background: white;\n  position: relative;\n  margin: auto;\n  border-radius: 8px;\n  border: solid 1px rgb(68, 139, 201);\n`;\nexport const Header = styled.div`\n  border-radius: 7px 7px 0 0;\n  background-color: rgb(68, 139, 201);\n  display: flex;\n  justify-content: space-between;\n  padding: 0.5rem;\n`;\nexport const HeaderText = styled.div`\n  color: #fff;\n  font-weight: 500;\n  align-self: center;\n`;\nexport const CloseButton = styled.button`\n  color: #fff;\n  font-size: 0.8rem;\n  border: none;\n  border-radius: 3px;\n  margin-left: 0.5rem;\n  background: none;\n  :hover {\n    cursor: pointer;\n  }\n`;\nexport const Content = styled.div`\n  padding: 10px;\n  max-height: 30rem;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n","import React, { FunctionComponent } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  Wrapper,\n  Header,\n  StyledModal,\n  HeaderText,\n  CloseButton,\n  Content,\n  Backdrop,\n} from \"./modal.style\";\nexport interface ModalProps {\n  isShown: boolean;\n  hide: () => void;\n  modalContent: JSX.Element;\n  headerText: string;\n}\nexport const Modal: FunctionComponent<ModalProps> = ({\n  isShown,\n  hide,\n  modalContent,\n  headerText,\n}) => {\n  const modal = (\n    <React.Fragment>\n      <Backdrop />\n      <Wrapper>\n        <StyledModal>\n          <Header>\n            <HeaderText>{headerText}</HeaderText>\n            <CloseButton onClick={hide}>X</CloseButton>\n          </Header>\n          <Content>{modalContent}</Content>\n        </StyledModal>\n      </Wrapper>\n    </React.Fragment>\n  );\n  return isShown ? ReactDOM.createPortal(modal, document.body) : null;\n};\n","export const ActionType = {\n    ADD_LOCATION: 'ADD_LOCATION',\n    EDIT_LOCATION: 'EDIT_LOCATION',\n    SET_SELECTED_LOCATION:'SET_SELECTED_LOCATION'\n}\n","import L from \"leaflet\";\n\nexport const customMapMarkerIcon = L.icon({\n    iconUrl: \"marker.png\",\n    iconSize: [20, 35],\n    iconAnchor: [10, 35],\n  });","import React, { ChangeEvent, useState } from \"react\";\nimport { MapContainer, Marker, TileLayer, useMapEvents } from \"react-leaflet\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  AddLocation,\n  EditLocation,\n  LocationType,\n  PlaceType,\n} from \"../../redux/action\";\nimport \"leaflet/dist/leaflet.css\";\nimport { customMapMarkerIcon } from \"../../utils/customMapMarketIcon\";\nimport \"./style.scss\";\nimport { LatLngLiteral } from \"leaflet\";\n\ninterface iShareLocationProps {\n  hideModal: VoidFunction;\n}\n\nconst mapState = (state: any) => {\n  return {\n    selectedLocation: state.selectedLocation as LocationType,\n  };\n};\n\ninterface LocationMarkerPropsType {\n  latLng: LatLngLiteral;\n  setLatLng: any;\n}\nfunction LocationMarker(props: LocationMarkerPropsType) {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const map = useMapEvents({\n    click(e) {\n      props.setLatLng(e.latlng);\n    },\n  });\n\n  return <Marker position={props.latLng} icon={customMapMarkerIcon} />;\n}\nexport default function ShareLocation(props: iShareLocationProps) {\n  const dispatch = useDispatch();\n  const { selectedLocation } = useSelector(mapState);\n\n  const [name, setName] = useState<string>(\n    selectedLocation.name ? selectedLocation.name : \"\"\n  );\n  const [latLng, setLatLng] = useState<LatLngLiteral>({\n    lat: selectedLocation.lat,\n    lng: selectedLocation.lng,\n  });\n  const [locationType, setLocationType] = useState<PlaceType>(\n    selectedLocation.type\n      ? (selectedLocation.type as PlaceType)\n      : PlaceType.Home\n  );\n  const [logo, setLogo] = useState<any>(selectedLocation.image);\n\n  const changeSelectedFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.target.files && setLogo(e.target.files[0]);\n  };\n\n  const handleChangeLocationType = (e: ChangeEvent<HTMLSelectElement>) => {\n    setLocationType(PlaceType[e.target.value as keyof typeof PlaceType]);\n  };\n\n  const handleShare = () => {\n    let location = {\n      ...latLng,\n      id: selectedLocation.id,\n      name: name,\n      type: locationType,\n      image: logo,\n    } as LocationType;\n    if (selectedLocation.id) {\n      dispatch(EditLocation(location));\n    } else {\n      dispatch(AddLocation(location));\n    }\n    props.hideModal();\n  };\n\n  return (\n    <div className=\"share-location-component\">\n      <div className=\"form\">\n        <span>Location name:</span>\n        <input\n          className=\"location-name\"\n          type=\"text\"\n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n        />\n        <span>Location on map:</span>\n        <MapContainer\n          center={selectedLocation}\n          zoom={15}\n          scrollWheelZoom={false}\n          className=\"map\"\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <LocationMarker latLng={latLng} setLatLng={setLatLng} />\n        </MapContainer>\n        <span className=\"form-label\">Location Type: </span>\n        <select\n          onChange={handleChangeLocationType}\n          value={locationType}\n          className=\"location-type\"\n        >\n          {(Object.keys(PlaceType) as Array<keyof typeof PlaceType>).map(\n            (key) => {\n              return (\n                <option key={key} value={key}>\n                  {key}\n                </option>\n              );\n            }\n          )}\n        </select>\n        <span>Logo:</span>\n        <input\n          type=\"file\"\n          onChange={changeSelectedFile}\n          className=\"logo-file-input\"\n        />\n        <div className=\"btn-wrapper\">\n          <button\n            onClick={() => {\n              props.hideModal();\n            }}\n            className=\"btn\"\n          >\n            Cancel\n          </button>\n          <button onClick={handleShare} className=\"btn default\">\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.scss\";\nimport { LocationType } from \"../../redux/action\";\n\ninterface locationDetailPropsType {\n  location: LocationType;\n  closePopup:VoidFunction;\n  showShareLocationModal:VoidFunction;\n}\nexport default function LocationDetail(props: locationDetailPropsType) {\n  let location = props.location;\n  const handleEdit=()=>{\n      props.closePopup();\n      props.showShareLocationModal();\n  }\n  return (\n    <div className=\"location-detail-component\">\n      <div className=\"header\">Location Details</div>\n      <div className=\"form\">\n        <span>Location name:</span>\n        <span>{location.name}</span>\n        <span>Location Type: </span>\n        <span>{location.type}</span>\n        <div className=\"btn-wrapper\">\n          <button className=\"btn\" onClick={props.closePopup}>Close</button>\n          <button className=\"btn default\" onClick={handleEdit}>Edit</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport L, { LatLngLiteral } from \"leaflet\";\nimport { Marker, Popup, useMapEvents } from \"react-leaflet\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { LocationType, SetSelectedLocation } from \"../../redux/action\";\nimport \"leaflet/dist/leaflet.css\";\nimport { customMapMarkerIcon } from \"../../utils/customMapMarketIcon\";\nimport LocationDetail from \"../LocationDetail\";\n\nconst mapState = (state: any) => {\n  return {\n    locations: state.locations,\n    selectedLocation: state.selectedLocation,\n  };\n};\n\nfunction LocationMarker(props: any) {\n  const { locations } = useSelector(mapState);\n  const map = useMapEvents({\n    click(e) {\n      let location: LocationType = {\n        ...e.latlng,\n      } as LocationType;\n      props.showShareLocationModal(location);\n    },\n  });\n\n  useEffect(() => {\n    if (locations.length) {\n      let center: L.LatLngLiteral = map.getCenter();\n      let firstLocationPoint: L.LatLngLiteral = {\n        lat: locations[locations.length - 1].lat,\n        lng: locations[locations.length - 1].lng,\n      };\n      if (center !== firstLocationPoint) {\n        map.flyTo(firstLocationPoint);\n      }\n    }\n  }, [locations, map]);\n\n  if (locations.length) {\n    return locations.map((item: any) => {\n      return (\n        <Marker\n          key={item.id}\n          position={[item.lat, item.lng]}\n          icon={customMapMarkerIcon}\n        >\n          <Popup>\n            <LocationDetail\n              location={item}\n              closePopup={() => {\n                map.closePopup();\n              }}\n              showShareLocationModal={() => props.showShareLocationModal(item)}\n            />\n          </Popup>\n        </Marker>\n      );\n    });\n  }\n\n  return null;\n}\n\nexport default function Map(props: any) {\n  const dispatch = useDispatch();\n  const { selectedLocation } = useSelector(mapState);\n  const { locations } = useSelector(mapState);\n\n  const showShareLocationModal = (Location: LocationType) => {\n    dispatch(SetSelectedLocation(Location));\n    props.toggle();\n  };\n\n  let center: LatLngLiteral = locations.length\n    ? { lat: locations[0].lat, lng: locations[0].lng }\n    : selectedLocation;\n\n  return (\n    <div className=\"app\">\n      <MapContainer\n        center={center}\n        zoom={13}\n        scrollWheelZoom={false}\n        style={{ height: \"100vh\", width: \"100vw\" }}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <LocationMarker showShareLocationModal={showShareLocationModal} />\n      </MapContainer>\n    </div>\n  );\n}\n","import \"./App.scss\";\nimport { Modal } from \"./components/Modal\";\nimport { useModal } from \"./components/Modal/useModal\";\nimport ShareLocation from \"./components/ShareLocation\";\nimport Map from \"./components/Map\";\nimport { useSelector } from \"react-redux\";\nimport { LocationStateType } from \"./redux/reducer\";\nimport { useEffect } from \"react\";\nconst mapState = (state: LocationStateType) => {\n  return {\n    locations: state.locations,\n  };\n};\nfunction App() {\n  const { isShown, toggle } = useModal();\n  const { locations } = useSelector(mapState);\n  useEffect(() => {\n    !locations.length && toggle();\n  }, [locations,toggle]);\n\n  const shareLocation = <ShareLocation hideModal={toggle} />;\n\n  return (\n    <div className=\"app\">\n      <Map toggle={toggle} />\n      <Modal\n        headerText=\"Share Location\"\n        isShown={isShown}\n        hide={toggle}\n        modalContent={shareLocation}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\nexport const useModal = () => {\n  const [isShown, setIsShown] = useState<boolean>(false);\n  const toggle = () => {\n    setIsShown(!isShown);\n  };\n  return {\n    isShown,\n    toggle,\n  };\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ActionType } from \"./actionType\";\nimport { LocationType } from './action'\nconst InitialState = {\n    locations: [] as LocationType[],\n    selectedLocation: {\n        lat: 51.505,\n        lng: -0.09,\n    } as LocationType\n}\nexport type LocationStateType = typeof InitialState;\n\nconst LoactionReducer = (state: any = InitialState, action: any) => {\n    switch (action.type) {\n        case ActionType.ADD_LOCATION:\n            return { ...state, locations: [...state.locations, { ...action.payload, id: Math.floor(Math.random() * 1000) }] };\n\n        case ActionType.EDIT_LOCATION:\n            return { ...state, locations: [...state.locations.filter((location: LocationType) => { return location.id !== action.payload.id }), action.payload] };\n\n        case ActionType.SET_SELECTED_LOCATION:\n            return { ...state, selectedLocation: action.payload };\n\n        default:\n            return state;\n    }\n}\n\nexport default LoactionReducer;","import { createStore } from \"redux\";\nimport LoactionReducer from './reducer'\n\nconst Store=createStore(LoactionReducer);\n\nexport default Store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>      \n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}